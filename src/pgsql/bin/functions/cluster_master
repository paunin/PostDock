#!/usr/bin/env bash
PRETENDING_MASTER=""

if [ "$PARTNER_NODES" != "" ]; then
    PRETENDING_MASTER=""
    echo ">>> Check all partner nodes for common upstream node..."  >&2
    IFS=',' read -ra NODES <<< "$PARTNER_NODES"
    for NODE in "${NODES[@]}"
    do
        echo ">>>>>> Checking NODE=$NODE..."  >&2
        MASTER_CONNINFO=`PGCONNECT_TIMEOUT=$CHECK_PGCONNECT_TIMEOUT PGPASSWORD=$REPLICATION_PASSWORD psql -h $NODE -U $REPLICATION_USER $REPLICATION_DB  -tAc "SELECT conninfo FROM $(get_repmgr_schema).$REPMGR_SHOW_NODES_TABLE WHERE (upstream_node_name IS NULL OR upstream_node_name = '') AND active=true"`
        if [[ "$?" -ne "0" ]]; then
            echo ">>>>>> Skipping: failed to get master from the node!"  >&2
            continue
        elif [ "$MASTER_CONNINFO" == "" ]; then
            echo ">>>>>>>>> Can not get information from the node about masters" >&2
            continue
        elif [ `echo "$MASTER_CONNINFO" | wc -l | tr -d ' '` == "1" ]; then
            SUGGESTED_MASTER=$(echo ${MASTER_CONNINFO} | awk -F 'host=' '{print $2}' | awk '{print $1}')
            echo ">>>>>>>>> Pretending master role node - ${SUGGESTED_MASTER}" >&2
            if [ "$PRETENDING_MASTER" != "" ]; then
                if [ "${PRETENDING_MASTER}" != "${SUGGESTED_MASTER}" ]; then
                    echo ">>>>>>>>> Conflict of pretending master role nodes (previously: $PRETENDING_MASTER, now: $SUGGESTED_MASTER)" >&2
                    PRETENDING_MASTER="" && break
                fi
            else
                PRETENDING_MASTER="${SUGGESTED_MASTER}"
            fi
        else
            echo ">>>>>>>>> There're more than 1 masters existing when getting master from node ${NODE}" >&2
            PRETENDING_MASTER="" && break
        fi
    done
fi

if [ "$PRETENDING_MASTER" == "" ]; then
    exit 1
else
    echo "$PRETENDING_MASTER"
    exit 0
fi